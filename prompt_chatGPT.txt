Eu: Me d√™ 5 sugest√µes f√°ceis extremamente criativas e sem custo, de prefer√™ncia com ferramentas open source, referente a esse projetoEntendendo o Desafio
Ol√° pessoal, Venilton da DIO aqui! Agora √© a sua hora de brilhar e construir um perfil de destaque na DIO! Para isso, crie seu pr√≥prio reposit√≥rio (dando um "fork" no GitHub da DIO) e aumente ainda mais seu portf√≥lio de projetos, o qual pode fazer toda diferen√ßa em suas entrevistas t√©cnicas üòé

Inspirado na hype "Natty or Not" do fisiculturismo, este Lab da DIO te convida a conhecer o mundo das IAs Generativas. Exploraremos o potencial dessas tend√™ncias tecnol√≥gicas incr√≠veis üí™ü§ì

Reposit√≥rio Git
O Git √© um conceito essencial no mercado de trabalho atualmente, por isso sempre refor√ßamos sua import√¢ncia em nossa metodologia educacional. Por isso, todo c√≥digo-fonte desenvolvido durante este conte√∫do foi versionado no seguinte endere√ßo para que voc√™ possa consult√°-lo a qualquer momento:

https://github.com/digitalinnovationone/lab-natty-or-not

Objetivos
Explorar IAs Generativas: Utilize essas tecnologias para criar conte√∫dos que sejam o mais realista poss√≠vel. Seja criativo!
Potf√≥lio de Projetos:
Fa√ßa o "fork" deste reposit√≥rio, criando uma c√≥pia em seu GitHub pessoal;
Edite seu README com os detalhes do seu projeto, siga nosso Template;
Submeta o link do seu reposit√≥rio na plataforma da DIO.
Efeito de Rede: Compartilhe seus resultados nas redes sociais com a hashtag #LabDIONattyOrNot
Template Para o Seu README.md
# T√≠tulo do Projeto Extremamente Aesthetic ;)

## üìí Descri√ß√£o
Breve descri√ß√£o do seu projeto

## ü§ñ Tecnologias Utilizadas
Liste as IAs Generativas e outras ferramentas usadas

## üßê Processo de Cria√ß√£o
Descreva como voc√™ criou o conte√∫do

## üöÄ Resultados
Apresente os resultados do seu projeto

## üí≠ Reflex√£o (Opcional)
Comente sobre o desafio de criar algo 'natty' com IA.", para desenvolver no meu computador windows 11." 

chatGPT:## Resumo

Voc√™ pode criar projetos criativos e sem custo em Windows 11 utilizando ferramentas open source para IA generativa que rodam localmente no seu PC. Por exemplo, o **Stable Diffusion Web UI** (Automatic1111) permite gerar e editar imagens com prompts de texto, totalmente offline ([Reddit][1]). O **Jan.ai** oferece uma alternativa open source ao ChatGPT que roda localmente para experimentos de NLP e chatbots ([Jan][2]). Frameworks como **Hugging Face Diffusers** e **Detectron2** viabilizam fine-tuning de modelos de imagem para criar detectores personalizados sem custo ([GitHub][3], [www.aiamigos.org][4]). Al√©m disso, bibliotecas como **LMQL** e **LlamaIndex** facilitam a constru√ß√£o de pipelines de consulta e chat sobre dados externos, enriquecendo seu portf√≥lio com IA conversacional ([GitHub][3]).

## 1. Detector ‚ÄúNatty or Not‚Äù de Imagens Corporais com Stable Diffusion e Detectron2

Utilize o **Stable Diffusion Web UI (Automatic1111)** para gerar vers√µes ‚Äúnatty‚Äù (sem retoque) e ‚Äúenhanced‚Äù (com IA) de uma mesma foto de treino ([Reddit][1]).
Empregue **Detectron2** ou PyTorch para treinar um classificador simples que diferencie imagens originais das geradas pela IA, usando um conjunto de dados sint√©tico criado no passo anterior ([www.aiamigos.org][4]).

## 2. Gerador de Transforma√ß√µes Corporais ‚ÄúNattyMorph‚Äù com DreamBooth

Instale o **Diffusers** da Hugging Face para fine-tuning usando **DreamBooth**, criando um modelo que estilize imagens corporais de acordo com par√¢metros como ‚Äúmais defini√ß√£o‚Äù ou ‚Äúnatural‚Äù ([GitHub][3]).
Implemente uma interface web local com **Streamlit** ou **Gradio** para o usu√°rio fazer upload de fotos e visualizar as transforma√ß√µes em tempo real ([Reddit][1]).

## 3. Chatbot ‚ÄúNattyBot‚Äù para Avalia√ß√£o e Dicas de Fitness

Use **Jan.ai** ou **GPT4All** para rodar um LLM offline que conversa sobre estilos de treino e identifica, pelo texto descrito pelo usu√°rio, ind√≠cios de uso de IA em fotos de antes e depois ([Jan][2]).
Adicione **LlamaIndex** e **LMQL** para incorporar artigos e posts de blogs como base de conhecimento, permitindo ao bot fundamentar suas recomenda√ß√µes em fontes reais ([GitHub][3]).

## 4. Criador de V√≠deos ‚ÄúNattyClips‚Äù com FFmpeg, Whisper e TTS

Combine **FFmpeg** (para montagem de clipes), **OpenAI Whisper** (para transcri√ß√£o de √°udio) e uma engine TTS open source (por exemplo, Coqui TTS) para gerar v√≠deos curtos que alternem imagens ‚Äúnatty‚Äù vs. ‚Äúenhanced‚Äù com coment√°rios narrados ([DataCamp][5]).
Automatize o pipeline num script Python que transforma um conjunto de imagens em um v√≠deo final, pronto para compartilhar nas redes sociais ([InfoWorld][6]).

## 5. Template Autom√°tico de Posts Sociais com Inkscape, ImageMagick e Modelos Locais

Crie banners para Instagram/LinkedIn usando **Inkscape** em linha de comando e **ImageMagick**, inserindo automaticamente imagens geradas pela IA e textos sobrepostos ([InfoWorld][6]).
Use modelos locais do **Stable Diffusion** para variar estilo e paleta de cores e gerar m√∫ltiplos templates em lote, economizando tempo e mantendo consist√™ncia visual no portf√≥lio ([GitHub][7]).

---

Cada uma dessas ideias exige apenas instala√ß√£o de ferramentas open source gratuitas e pode ser desenvolvida em Windows 11 sem custo de licenciamento. buon coding!

[1]: https://www.reddit.com/r/artificial/comments/1c13kwf/what_are_some_open_source_generative_ai_apps/?utm_source=chatgpt.com "what are some open source generative ai apps? : r/artificial - Reddit"
[2]: https://jan.ai/?utm_source=chatgpt.com "Jan: Open source ChatGPT-alternative that runs 100% offline - Jan"
[3]: https://github.com/steven2358/awesome-generative-ai?utm_source=chatgpt.com "steven2358/awesome-generative-ai: A curated list of ... - GitHub"
[4]: https://www.aiamigos.org/open-source-generative-ai-projects/?utm_source=chatgpt.com "Open-source Generative AI Projects - AIAmigos.org"
[5]: https://www.datacamp.com/blog/5-projects-you-can-build-with-generative-ai-models?utm_source=chatgpt.com "5 Projects You Can Build with Generative AI Models (with examples)"
[6]: https://www.infoworld.com/article/3566915/11-open-source-ai-projects-that-developers-will-love.html?utm_source=chatgpt.com "11 open source AI projects that developers will love - InfoWorld"
[7]: https://github.com/pierre-josselin/getting-started-with-local-and-open-source-generative-ai?utm_source=chatgpt.com "Introductory guide to local and open source generative AI - GitHub"


eu: Me fala mais como seria esse projeto '1. Detector "Natty or Not" de Imagens Corporais com Stable Diffusion e Detectron2

chatGPT: ## Vis√£o Geral do Projeto

O objetivo do ‚ÄúDetector Natty or Not‚Äù √© criar um classificador bin√°rio capaz de distinguir **imagens corporais originais** (‚Äúnatty‚Äù) de **imagens alteradas por IA** (‚Äúnot‚Äù), usando um conjunto de dados sint√©tico e ferramentas open source. Em resumo, o fluxo √©:

1. **Gerar dataset sint√©tico**: utilize o Stable Diffusion Web UI para criar pares de imagens ‚Äúnatty‚Äù vs. ‚Äúenhanced‚Äù a partir de um mesmo corpo-base. ([GitHub][1])
2. **Coletar imagens reais**: re√∫na fotos de treino ‚Äúnatty‚Äù (p. ex. de fontes fitness com licen√ßa livre), e organize-as em pastas distintas.
3. **Preparar o Detectron2**: instale e configure o Detectron2, registrando o dataset bin√°rio pelo `DatasetCatalog` e `MetadataCatalog`. ([GitHub][2])
4. **Treinar o modelo**: execute um treinamento de classifica√ß√£o (p.ex. usando Faster R-CNN ou um backbone leve) para diferenciar as classes.
5. **Avaliar e servir**: me√ßa acur√°cia, precis√£o e recall; ent√£o construa uma interface (p. ex. Gradio) para testar novas fotos. ([Gradio][3])

---

## 1. Prepara√ß√£o do Ambiente em Windows 11

### 1.1 Instala√ß√£o do Stable Diffusion Web UI (Automatic1111)

* **Requisitos**: Python 3.10.6 (n√£o usar vers√µes superiores), Git e placas NVIDIA com CUDA compat√≠vel. ([GitHub][1])
* **Passos**:

  1. `git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git`
  2. Coloque um modelo `*.ckpt` em `models/Stable-diffusion/` (p. ex. v1.5).
  3. Execute `webui-user.bat` para iniciar o servidor local na porta 7860. ([archvizartist.com][4])
* **Resultado**: UI web onde voc√™ insere prompts e gera imagens ‚Äúenhanced‚Äù.

### 1.2 Instala√ß√£o do Detectron2

* **Op√ß√£o recomenda (Conda + pip)**:

  ```bash
  conda create -n det2 python=3.11.7
  conda activate det2
  conda install pytorch torchvision torchaudio cudatoolkit=12.1 -c pytorch -c nvidia
  pip install cython pycocotools
  python -m pip install 'git+https://github.com/facebookresearch/detectron2.git'
  ```

  ([Detectron2][5])
* **Alternativa Windows GUI**: siga o guia passo-a-passo com Visual Studio Build Tools, Cython e clone do reposit√≥rio. ([DEV Community][6])
* **Valida√ß√£o**: `python -m detectron2.utils.collect_env` sem erros.

---

## 2. Cria√ß√£o do Dataset Sint√©tico

### 2.1 Gerando Pares ‚ÄúNatty‚Äù vs. ‚ÄúEnhanced‚Äù

1. **Selecione uma foto ‚Äúnatty‚Äù base**.
2. **Use Stable Diffusion Web UI** com o mesmo *seed()* e varia√ß√µes no prompt para gerar:

   * Vers√£o ‚Äúnatural‚Äù: prompt descrevendo corpo sem retoques (p. ex. ‚Äúphotorealistic body, no retouch‚Äù).
   * Vers√£o ‚Äúenhanced‚Äù: prompt de corpo com defini√ß√£o extra (p. ex. ‚Äúsculpted muscles, HDR lighting‚Äù).
3. **Salve as imagens** em `dataset/real/` e `dataset/ai/`.

### 2.2 Organiza√ß√£o e Registro no Detectron2

No seu script Python:

```python
from detectron2.data import DatasetCatalog, MetadataCatalog

def get_natty_dicts(img_dir):
    # percorre dataset/real e dataset/ai, montando listas de dicion√°rios
    return data_dicts

DatasetCatalog.register("natty_train", lambda: get_natty_dicts("dataset"))
MetadataCatalog.get("natty_train").set(thing_classes=["real","ai"])
```

([GitHub][2])

---

## 3. Configura√ß√£o e Treinamento do Modelo

### 3.1 Configura√ß√£o B√°sica

```python
from detectron2.engine import DefaultTrainer
from detectron2.config import get_cfg

cfg = get_cfg()
cfg.merge_from_file("detectron2/configs/COCO-Detection/faster_rcnn_R_50_FPN_3x.yaml")
cfg.DATASETS.TRAIN = ("natty_train",)
cfg.MODEL.ROI_HEADS.NUM_CLASSES = 2
cfg.OUTPUT_DIR = "./output"
cfg.SOLVER.BASE_LR = 0.00025
cfg.SOLVER.MAX_ITER = 10000  # ajustar conforme tamanho do dataset
```

([GitHub][7])

### 3.2 Executando o Treino

```bash
python train_net.py --config-file configs/my_natty.yaml
```

* **Monitoramento**: utilize TensorBoard para acompanhar loss e m√©tricas.
* **Dura√ß√£o**: algumas horas, dependendo da GPU.

---

## 4. Avalia√ß√£o e Implanta√ß√£o

### 4.1 Avalia√ß√£o de Performance

* **M√©tricas**: acur√°cia global, precis√£o e recall por classe.
* **Ferramentas**: `DefaultTrainer.test()` e COCOEvaluator do Detectron2.

### 4.2 Interface com Gradio

```python
import gradio as gr
from detectron2.engine import DefaultPredictor

predictor = DefaultPredictor(cfg)

def classify_image(img):
    outputs = predictor(img)
    score_real = float(outputs["instances"].scores[outputs["instances"].pred_classes==0][0])
    score_ai = float(outputs["instances"].scores[outputs["instances"].pred_classes==1][0])
    return {"Natty (Real)": score_real, "Not (AI)": score_ai}

iface = gr.Interface(fn=classify_image,
                     inputs=gr.Image(type="numpy"),
                     outputs=gr.Label(num_top_classes=2))
iface.launch()
```

* **Instala√ß√£o do Gradio**: `pip install gradio` ([Gradio][3])
* **Teste**: arraste uma foto e veja se √© ‚ÄúNatty‚Äù ou ‚ÄúNot‚Äù.

---

## 5. Pr√≥ximos Passos e Otimiza√ß√µes

* **Refinamento de dataset**: incluir varia√ß√µes de ilumina√ß√£o, poses e resolu√ß√µes.
* **Modelos alternativos**: experimentar ViTDet (transformer) dentro do Detectron2 para melhorar robustez ([arXiv][8]).
* **Deployment**: Dockerizar o app e servir via FastAPI ou Hugging Face Spaces.

---

Com esse pipeline, voc√™ ter√° um **Detector Natty or Not** funcional, totalmente open source e sem custos de licenciamento, ideal para demonstrar suas habilidades em IA generativa e vis√£o computacional no portf√≥lio!

[1]: https://github.com/AUTOMATIC1111/stable-diffusion-webui?utm_source=chatgpt.com "Stable Diffusion web UI - GitHub"
[2]: https://github.com/facebookresearch/detectron2/blob/main/docs/tutorials/datasets.md?utm_source=chatgpt.com "detectron2/docs/tutorials/datasets.md at main - GitHub"
[3]: https://www.gradio.app/guides/image-classification-in-pytorch?utm_source=chatgpt.com "Image Classification In Pytorch - Gradio"
[4]: https://archvizartist.com/article/how-to-install-stable-diffusion-on-windows-automatic1111/?utm_source=chatgpt.com "How to install Stable Diffusion on Windows (AUTOMATIC1111)"
[5]: https://detectron2.readthedocs.io/tutorials/install.html?utm_source=chatgpt.com "Installation ‚Äî detectron2 0.6 documentation"
[6]: https://dev.to/reckon762/how-to-install-detectron2-on-windows-3hil?utm_source=chatgpt.com "How to Install Detectron2 on Windows - DEV Community"
[7]: https://github.com/facebookresearch/detectron2?utm_source=chatgpt.com "Detectron2 is a platform for object detection, segmentation ... - GitHub"
[8]: https://arxiv.org/abs/2203.16527?utm_source=chatgpt.com "Exploring Plain Vision Transformer Backbones for Object Detection"


Eu: A imagem eu vou fazer o upload e ele vai saber se a imagem √© feita por IA ou √© verdadeira? N√£o entendi o objetivo desse sistema, para que ele serve?



chatGPT: ## Resumo

O ‚ÄúDetector Natty or Not‚Äù √© um sistema de **classifica√ß√£o bin√°ria** de imagens corporais que, ao receber uma foto via upload, retorna a probabilidade de ela ser **genu√≠na (natty)** ou **gerada/alterada por IA (not)**. Ele serve para demonstrar habilidades em vis√£o computacional e IA generativa, al√©m de ter aplica√ß√µes pr√°ticas em **verifica√ß√£o de autenticidade**, **modera√ß√£o de conte√∫do** e **pesquisa sobre deepfakes**.

---

## Como Funciona na Pr√°tica

1. **Upload da Imagem**
   O usu√°rio faz o upload de qualquer foto corporal (por exemplo, uma selfie ou foto de treino) atrav√©s da interface web (Gradio, Streamlit, etc.).

2. **Pr√©-processamento**
   A foto √© ajustada (redimensionamento, normaliza√ß√£o de cores) para o formato esperado pelo modelo de vis√£o computacional.

3. **Infer√™ncia com Detectron2**

   * O modelo treinado (por exemplo, Faster R-CNN) recebe a imagem e produz ‚Äúscores‚Äù para cada classe:

     * **Classe 0 ‚Äì Natty (Real)**
     * **Classe 1 ‚Äì Not (AI-Gerada)**
   * Um threshold simples (e.g., 0.5) converte esses scores em uma previs√£o final.

4. **Resposta ao Usu√°rio**
   O sistema exibe algo como:

   ```
   Natty (Real): 12%  
   Not (AI): 88%
   ```

   ou simplesmente ‚Äú**Imagem detectada como IA**‚Äù se o score da classe ‚ÄúNot‚Äù for maior que o da classe ‚ÄúReal‚Äù.

---

## Objetivos e Aplica√ß√µes

### 1. Portf√≥lio e Aprendizado

* **Demonstra√ß√£o de compet√™ncias** em:

  * Gera√ß√£o de dataset sint√©tico com Stable Diffusion.
  * Registro e uso de datasets no Detectron2.
  * Treinamento de modelos de vis√£o computacional.
  * Cria√ß√£o de interfaces interativas (Gradio/Streamlit).

### 2. Verifica√ß√£o de Autenticidade

* **Combate √† desinforma√ß√£o**: detectar imagens manipuladas em redes sociais e sites de not√≠cia ([Medium][1]).
* **Modera√ß√£o de conte√∫do**: impedir compartilhamento de fotos falsas em plataformas online ([AP News][2]).
* **Pesquisa acad√™mica e forense**: estudar padr√µes sutis deixados por algoritmos de gera√ß√£o de imagem, como artefatos de compress√£o ou inconsist√™ncias de ilumina√ß√£o ([Pindrop][3]).

### 3. Extens√£o a Outros Dom√≠nios

* **Deepfake em v√≠deo**: adaptando o pipeline para quadros de v√≠deo ([MIT Media Lab][4]).
* **Liveness tests**: integra√ß√£o com t√©cnicas de ‚Äúliveness‚Äù (movimentos faciais, detec√ß√£o de pulso) para aumentar a robustez contra ataques mais sofisticados ([Wikipedia][5]).

---

## Por Que Esse Sistema √â √ötil?

* **Autentica√ß√£o Digital**: Com o avan√ßo de IAs generativas, √© cada vez mais dif√≠cil distinguir o real do sint√©tico apenas a olho nu; sistemas autom√°ticos ajudam a manter a confian√ßa no conte√∫do ([wires.onlinelibrary.wiley.com][6]).
* **Ferramenta de Avalia√ß√£o R√°pida**: Em segundos, voc√™ obt√©m um laudo de probabilidade, √∫til para moderadores ou jornalistas.
* **Base para Projetos Avan√ßados**: Serve como ponto de partida para explorar modelos transformers, ensemble de classificadores ou at√© detec√ß√£o em tempo real.

---

Em suma, ao fazer o upload da sua imagem, o ‚ÄúDetector Natty or Not‚Äù avaliar√° se ela parece ter sido alterada por IA ou n√£o, retornando scores de confian√ßa para cada categoria. √â uma excelente vitrine para seu portf√≥lio, com aplica√ß√µes diretas em verifica√ß√£o de autenticidade e combate √† desinforma√ß√£o.

[1]: https://medium.com/%40nilushihansika531/deepfake-detection-7c73b0acc5a7?utm_source=chatgpt.com "Deepfake Detection - Medium"
[2]: https://apnews.com/article/1df8064173239c41b2ea83ef050b3cdb?utm_source=chatgpt.com "One Tech Tip: How to spot AI-generated deepfake images"
[3]: https://www.pindrop.com/article/how-does-deepfake-detection-work/?utm_source=chatgpt.com "Deepfake Detection Guide: Protect Your Business Today - Pindrop"
[4]: https://www.media.mit.edu/projects/detect-fakes/overview/?utm_source=chatgpt.com "Detect DeepFakes: How to counteract misinformation created by AI"
[5]: https://en.wikipedia.org/wiki/Liveness_test?utm_source=chatgpt.com "Liveness test"
[6]: https://wires.onlinelibrary.wiley.com/doi/10.1002/widm.1520?utm_source=chatgpt.com "Deepfake detection using deep learning methods: A systematic and ..."


Eu: o que o Stable Diffusion vai fazer nesse sistema ?




chatGPT: O **Stable Diffusion** entra no sistema ‚ÄúNatty or Not‚Äù como a fonte de **imagens sint√©ticas** que permitem criar, de forma r√°pida e controlada, vers√µes ‚Äúenhanced‚Äù (IA-retocadas) de uma mesma foto ‚Äúnatty‚Äù (original).

## Resumo

Usamos o Stable Diffusion para gerar pares de imagens ‚Äúnatty‚Äù vs. ‚Äúenhanced‚Äù a partir do mesmo prompt ou seed, criando um **dataset balanceado** que alimenta o Detectron2 no treino do classificador. A gera√ß√£o sint√©tica garante variedade de cen√°rios (ilumina√ß√£o, pose, defini√ß√£o muscular) sem depender de enormes cole√ß√µes de fotos reais, acelerando e barateando seu pipeline de vis√£o computacional.

---

## 1. Por que gerar imagens sint√©ticas?

* **Escassez de dados reais**: Fotos de antes/depois ‚Äúnatty‚Äù com licen√ßa livre s√£o limitadas; IA preenche essa lacuna criando exemplos ‚Äúnot‚Äù artificialmente ([Roboflow Blog][1]).
* **Controle total**: Com prompts espec√≠ficos, voc√™ consegue variar apenas atributos desejados (por exemplo, ‚Äúsculpted muscles, HDR lighting‚Äù) mantendo fundo e composi√ß√£o constantes ([Roboflow Blog][1]).
* **Balanceamento de classes**: Gera quantidades iguais de imagens ‚Äúreal‚Äù e ‚ÄúIA‚Äù para evitar vi√©s durante o treino ([Medium][2]).

---

## 2. Como integrar o Stable Diffusion ao pipeline

1. **Instala√ß√£o** de um Web UI (Automatic1111) ou da **diffusers** da Hugging Face, rodando localmente em Windows 11.
2. **Prompting controlado**:

   * Defina uma seed fixa para garantir pares reproduz√≠veis.
   * Use ‚Äúphotorealistic body, no retouch‚Äù para a classe ‚Äúnatty‚Äù e ‚Äúsculpted muscles, HDR lighting‚Äù para ‚Äúenhanced‚Äù ([Roboflow Blog][1]).
3. **Exporta√ß√£o**: salve as imagens geradas em pastas separadas (`dataset/real/` vs. `dataset/ai/`).
4. **Pr√©-processamento**: redimensione e normalize para o formato exigido pelo Detectron2.

---

## 3. Benef√≠cios pr√°ticos

* **Rapidez**: gera centenas de imagens em minutos, ao inv√©s de horas coletando fotos reais.
* **Custo zero**: usa modelos open source sem licen√ßa ou cr√©ditos pagos ([Hugging Face][3]).
* **Variedade**: explora diferentes estilos e n√≠veis de retoque para treinar um classificador mais robusto.

---

## 4. Conclus√£o

No ‚ÄúDetector Natty or Not‚Äù, o Stable Diffusion √© respons√°vel por **fabricar** a metade ‚ÄúIA‚Äù do seu dataset, criando exemplos ‚Äúnot‚Äù de alta qualidade que, em conjunto com fotos reais ‚Äúnatty‚Äù, permitem ao Detectron2 aprender a distinguir com precis√£o imagens genu√≠nas daquelas geradas ou alteradas por IA.

[1]: https://blog.roboflow.com/synthetic-data-with-stable-diffusion-a-guide/?utm_source=chatgpt.com "Synthetic Data Generation with Stable Diffusion: A Guide"
[2]: https://medium.com/%40anil2k51/stablediffusion-synthetic-data-generation-6fb6564d8f72?utm_source=chatgpt.com "StableDiffusion Synthetic Data Generation | by Anil - Medium"
[3]: https://huggingface.co/learn/computer-vision-course/en/unit10/datagen-diffusion-models?utm_source=chatgpt.com "Synthetic Data Generation with Diffusion Models - Hugging Face"
